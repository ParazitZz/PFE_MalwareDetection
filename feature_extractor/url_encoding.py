import numpy as np
import pandas as pd

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Activation
from tensorflow.keras.optimizers import Adam, SGD
from tensorflow.keras import backend as K

from matplotlib import pyplot as plt


def allf(features, line):
    # Add the distinct feature to 'all' set
    features.get('all').add(line[0] + '::' + line[1])

def nonef(features, line):
    pass

def unknown(features, line):
    if len(line) == 2:
        print('Unknown feature : ', line[0] + '::' + line[1])
        if len((line[0] + line[1]).strip()):
            exit(1)

feature_set = {
    'feature': nonef,  # Hardware Components 72
    'permission': nonef,  # Requested Permission 3812
    'activity': nonef,  # App Components p1 185729
    'service_receiver': nonef,  # App Component p2 33222
    'provider': nonef,  # App Component p3# : 4513
    'intent': nonef,  # Filtered Intent 6379
    'call': nonef,  # Restricted Api Calls 733
    'real_permission': nonef,  # Used Permission 70
    'api_call': nonef,  # = Suspicious Api Calls 315
    'url': allf,  # Network Address 310488
}

def accumulate_features(in_dir=in_directory, out_dir=out_directory):
    if not isdir(out_dir):
        mkdir(out_dir)
    paths = [join(in_dir, f) for f in listdir(in_dir)]
    features = {'all': set(), 'count': set()}
    for idx, path in enumerate(paths):
        with open(path, 'r') as file:
            lines = file.read().splitlines()
            lines = [sl.split('::') for sl in lines]
            for line in lines:
                switcher = feature_set.get(line[0], unknown)
                switcher(features, line)
    with open(join(out_dir, 'urls.p'), 'wb') as file:
        flatfeature = []
        flatfeature.extend(list(features.get('count')))
        flatfeature.extend(list(features.get('all')))
        dump(flatfeature, file)


def get_unique_URLs(file):
    with open(features_path, 'rb') as f:
        features = load(f) # Valeurs possibles des features 
    print(len(features))
    print(features)

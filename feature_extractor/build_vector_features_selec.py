#!/usr/bin/env python3
from argparse import ArgumentParser, ArgumentDefaultsHelpFormatter
from pickle import dump
from os import listdir, mkdir
from os.path import isdir, join
import pandas as pd

out_directory = 'Drebin-Dataset/generated'
path_csv = 'feature_extractor/Feature_importance/'
sub_names = ['feature', 'permission', 'activity', 'service_receiver', 'provider', 'intent', 'call', 'real_permission',
'api_call', 'url']
sub_names = ['feature', 'permission', 'activity', 'service_receiver', 'provider', 'intent']

def get_features_Excel(path):

    df = pd.read_csv(path)
    return df[df['Ranking'] < 300]['Feature'].tolist()


def accumulate_features(sub_names, path_csv, out_dir=out_directory):

    if not isdir(out_dir):
        mkdir(out_dir)

    features_output = set()

    for name in sub_names:
        features_list = get_features_Excel(path_csv + name + '.csv')

        for elem in features_list:
            features_output.add(name + '::' + str(elem))

    with open(join(out_dir, 'features_select.p'), 'wb') as file:
        flatfeature = list(features_output)
        print(len(flatfeature))
        dump(flatfeature, file)

if __name__ == '__main__':
    parser = ArgumentParser(
        description='Accumulates all possible features of the observations in sparse string format ',
        formatter_class=ArgumentDefaultsHelpFormatter)

    parser.add_argument('-o', '--output', type=str, default=out_directory, help='The directory which the output file '
                                                                                'should be written to.')
    args = parser.parse_args()
    out_directory = args.output


    accumulate_features(sub_names, path_csv, out_directory)

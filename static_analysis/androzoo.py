import pandas as pd
import os
import requests

DIR = "static_analysis"
API = "static_analysis/api_key.txt"
LATEST = "static_analysis/latest.csv"
APKS = "static_analysis/apks"
SIZE_OF_DATASET = 20000

def read_apikey(file):
    with open(file, 'r') as f:
        lines = f.readlines()
    return lines[0]

def choose_shas(file, generate=False):
    already_dl = pd.Series(os.listdir(APKS))
    if generate:
        csv = pd.read_csv(file)
        if len(already_dl) > 0:
            already_dl = already_dl.str.split('.')[0]
            csv = csv[~csv.sha256.isin(already_dl)]
        csv = csv[csv['apk_size'] < 1000000]
        csv['dex_date'] = pd.to_datetime(csv['dex_date'])
        benign = csv[(csv['apk_size'] < 1000000) & (csv['dex_date'] >= pd.Timestamp('2013-01-01')) & (csv['vt_detection']==0) & (csv['markets'].str.contains('google'))].sample(int(SIZE_OF_DATASET/2))
        malware = csv[(csv['apk_size'] < 1000000) & (csv['dex_date'] >= pd.Timestamp('2013-01-01')) & (csv['vt_detection'] > 5) & (csv['markets'].str.contains('google'))].sample(int(SIZE_OF_DATASET/2))
        benign.to_csv(os.path.join(DIR,'chosen_benign.csv'), index=False)
        malware.to_csv(os.path.join(DIR,'chosen_malwares.csv'), index=False)
    else:
        benign = pd.read_csv(os.path.join(DIR,'chosen_benign.csv'))
        malware = pd.read_csv(os.path.join(DIR,'chosen_malwares.csv'))
        if len(already_dl) > 0:
            benign = benign[~benign.sha256.isin(already_dl)]
            malware = malware[~malware.sha256.isin(already_dl)]
    shas = pd.concat([benign['sha256'], malware['sha256']]).reset_index(drop=True)
    return shas

def dl_shas(shalist):
    already_dl = pd.Series(data=os.listdir(APKS), name='Alr')
    if len(already_dl) > 0:
        already_dl = pd.Series(data=already_dl.str.split('.').str[0])
        shalist = shalist[~shalist.isin(already_dl)]


    key = read_apikey(API)

    for i, sha in enumerate(shalist):
        params = (
            ('apikey', key),
            ('sha256', sha),
        )
        response = requests.get('https://androzoo.uni.lu/api/download', params=params)
        filename = response.headers['Content-Disposition'].split('=')[-1]
        with open(os.path.join(APKS,filename), 'wb') as f:
            f.write(response.content)
        print(f"{i+len(already_dl)}/{len(shalist)+len(already_dl)} - Downloaded apk {sha}")

if __name__ == "__main__":
    
    sha = choose_shas(LATEST, generate=False)
    dl_shas(sha)



    #response = requests.get('https://androzoo.uni.lu/api/download?apikey=${APIKEY}&sha256=${SHA256}')